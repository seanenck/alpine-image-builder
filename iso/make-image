#!/bin/sh -e
NAME="ttypty"
ARCH="aarch64"
TAG="3.20"
VERS="$TAG.3"
CUSP="https://www.cusplinux.org/cusp/v$TAG"
ALPINE="https://dl-cdn.alpinelinux.org/alpine/v$TAG"
if [ -z "$1" ]; then
  echo "builddir required"
  exit 1
fi
BUILD="$1"
test -d "$BUILD"
WORKDIR="$(mktemp -d -t cusp-image.XXXXXX)"
trap 'rm -rf $WORKDIR' INT EXIT
CACHE="$BUILD/cache"
mkdir -p "$CACHE"

cp -r ../caports "$WORKDIR/"
SCRIPTS="$WORKDIR/caports/scripts"
PROFILE="mkimg.$NAME.sh"

{
  cat << EOF
profile_$NAME() {
  hostname="cusp.$NAME"
  modloop_sign=yes
  initfs_cmdline="modules=loop,squashfs,sd-mod,usb-storage quiet"
  initfs_features="ata base bootchart cdrom ext4 nvme squashfs usb virtio"
  grub_mod="all_video disk part_gpt part_msdos linux normal configfile search search_label efi_gop fat iso9660 cat echo ls test true help gzio"
  profile_abbrev="std"
  image_ext="iso"
  output_format="iso"
  title='$NAME'
  desc='$NAME personal spin iso'
  kernel_flavors='virt'
  profile_abbrev='$NAME'
  arch='$ARCH'
  kernel_addons=
  apks="
    age \
    alpine-base \
    alpine-conf \
    apk-cron \
    bash \
    bash-completion \
    bat \
    busybox \
    busybox-mdev-openrc \
    chrony \
    curl \
    cusp-base \
    cusp-keys \
    delta \
    dhcpcd \
    diffutils \
    doas \
    docs \
    dosfstools \
    e2fsprogs \
    efm-langserver \
    file \
    git \
    kbd-bkeymaps \
    kitty-terminfo \
    make \
    neovim \
    openssh \
    openssl \
    ripgrep \
    rsync \
    shellcheck \
    tiny-cloud-alpine \
    tree-sitter \
    tree-sitter-bash \
    tree-sitter-go \
    tree-sitter-go-mod \
    tree-sitter-json \
    tree-sitter-lua \
    tree-sitter-python \
    tree-sitter-toml \
    tzdata \
    unzip \
    wget"
}
EOF
} > "$SCRIPTS/$PROFILE"

(
  cd "$WORKDIR" && "caports/scripts/mkimage.sh" \
    --workdir "$CACHE" \
    --outdir "$BUILD" \
    --arch "$ARCH" \
    --profile "$NAME" \
    --tag "$VERS" \
    --repository "$ALPINE/main" \
    --repository "$ALPINE/community" \
    --repository "$CUSP/main"
)
